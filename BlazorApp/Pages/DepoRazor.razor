@page "/DepoRazor"
@using BlazorApp.Services
@inject NavigationManager navigationManager

<EditDepo></EditDepo>
<hr />
<h3>Depolar</h3>

@if (MyDataResult == null)
{
    <div class="spinner-grow text-primary" role="status">
        <span class="sr-only">Loading...</span>
    </div>
}
else
{
    @foreach (var item in MyDataResult)
    {

        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Depo Id</th>
                    <th scope="col">Depo Fiyatı</th>
                    <th scope="col">Depo Alanı(metre kare)</th>
                    <th scope="col">Açıklama</th>
                    <th scope="col">Bina Id</th>

                </tr>
            </thead>
            <tbody>
                <tr>
                    <th scope="row">@item.DepoId</th>
                    <td>@item.DepoFiyatı</td>
                    <td>@item.DepoM2</td>
                    <td>@item.Aciklama</td>
                    <td>@item.BinaId</td>
                    <td>
                        <button class="btn btn-primary" @onclick="(()=>ShowDetail(item.DepoId))">Detay Görüntüle</button>
                    </td>
                    <td>
                        <button class="btn btn-primary" @onclick="(()=>DeleteDepo(item.DepoId))">Binayı Sil</button>
                    </td>
                </tr>

            </tbody>
        </table>

    }
}
@code {

    [Inject]
    public IBuldingAppService buildingAppService { get; set; }
    public List<Depo> MyDataResult { get; set; }

    protected override async Task OnInitializedAsync()
    {
        MyDataResult = (await buildingAppService.DepolarıGetir()).ToList();
    }
    void DeleteDepo(int id)
    {
        buildingAppService.DeleteDepo(id);
    }
    void ShowDetail(int id)
    {
        navigationManager.NavigateTo($"depodetail/{id}");
    }
}
